# 后端接口指向
location /api{
    add_header 'Access-Control-Allow-Origin' $http_origin;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, DEL, PUT, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Rnage';
    # 由于跨域请求，浏览器会先发送一个OPTIONS的预检请求，我们可以缓存第一次的预检请求的失效时间
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 2592000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    # 后端接口
    # proxy_pass ENV_APP1_GATEWAY;//自定义环境变量
    proxy_pass http://172.xx.xxx.xx:8080;
}

# 前端静态资源
location /child_app1{
    add_header 'Access-Control-Allow-Origin' $http_origin;
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, DEL, PUT, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Rnage';
    # 由于跨域请求，浏览器会先发送一个OPTIONS的预检请求，我们可以缓存第一次的预检请求的失效时间
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 2592000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    # 子应用 前端打包文件的路径
    alias /user/html/dist/;
    index index.html index.htm;
    # 刷新页面差找页面,防止404
    try_files $uri $uri/ /child_app1/index.html;
}